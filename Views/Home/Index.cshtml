@{
    ViewData["Title"] = "Home Page";

    var firstDayNum = (int?)ViewData["FirstDay"]; //On which day of week (monday, friday etc) does this month start
    
    var dayNumber = 1;
    var dayNextMonth = 1;

    var nextDate = (int?)ViewData["NextMonthDate"];
    var prevDate = (int?)ViewData["PrevMonthDate"];

}
<div class="main-box">
    <div class="day-of-week-row align-items-center btn-group-vertical">
        <button type="button" class="btn btn-light" onclick="location.href='@Url.Action("Index","Home", new { id = prevDate })'"><</button>
        <h1> @ViewData["CurrentMonthAndYearAsString"] </h1>
        <button type="button" class="btn btn-light" onclick="location.href='@Url.Action("Index","Home", new { id = nextDate })'">></button>
    </div>
    <div class="day-of-week-row">
        <div class="day-of-week rounded"> Poniedziałek </div>
        <div class="day-of-week rounded"> Wtorek </div>
        <div class="day-of-week rounded"> Środa </div>
        <div class="day-of-week rounded"> Czwartek </div>
        <div class="day-of-week rounded"> Piątek </div>
        <div class="day-of-week rounded"> Sobota </div>
        <div class="day-of-week rounded"> Niedziela </div>
    </div>
    

    @for (int i = 0; i < 5; i++){

        <div class="day-row">
            @for (int j = 0; j<7; j++){

                if (firstDayNum != 0){
                    <div class="day rounded border border-5" >

                        <p>@((int?)ViewData["PrevMonthNumOfDays"]- (firstDayNum-1))</p>
                        @{
                            firstDayNum = firstDayNum - 1;
                        }   

                    </div>
                }
                else{

                    if (dayNumber <= (int?)ViewData["ThisMonthNumOfDays"]) {

                        //Add special border to today
                        if (DateTime.Today.Day == dayNumber && nextDate == Int32.Parse(DateTime.Today.AddMonths(1).ToString("MMyyyy"))) {
                            <div class="day rounded border border-5 border-warning" >

                                <p> @dayNumber</p>
                                @{
                                    dayNumber++;
                                }

                            </div>
                        }
                        else {
                            <div class="day rounded border border-5" ondragenter="dragover(this)" ondragleave="dragover(this)" ondragover="allowDrop(event)" ondrop="drop(event)">

                                <p> @dayNumber</p>
                                @{
                                    dayNumber++;
                                }
                                
                            </div>
                        }
                    }
                    else {
                        <div class="day rounded border border-5" >

                            <p> @dayNextMonth</p>
                            @{
                                dayNextMonth++;
                            }

                        </div>
                    }
                }
            }
        </div>
    }

    <div class="footer2">
        outside relative
        <div class="add-emp-box" id="EmployeeBox">
            <input type='checkbox' class="emp-box-button" name='thing' value='valuable' id="empBoxButton" onclick="showBox(this)" /><label for="empBoxButton"></label>
            <div draggable="true" class="employee-draggable" ondragstart="hideEmpBox(event)" ondragend="showBox(this)"></div>
        </div>
    </div>
</div>